name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push reservations service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/reservations:latest ./reservations
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/reservations:latest

      - name: Build and push billing service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/billing:latest ./billing
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/billing:latest

      - name: Build and push products service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/products:latest ./products
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/products:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ec2-3-145-149-124.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Create tarball of selected directories and files
        run: |
          tar -czf deployment-package.tar.gz reservations billing products docker-compose.yml

      - name: Copy tarball to EC2
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deployment-package.tar.gz ec2-user@ec2-3-145-149-124.us-east-2.compute.amazonaws.com:/home/ec2-user/deployment-package.tar.gz

      - name: Extract tarball on EC2 and deploy
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@ec2-3-145-149-124.us-east-2.compute.amazonaws.com << 'EOF'
          tar -xzf /home/ec2-user/deployment-package.tar.gz -C /home/ec2-user/microservices
          cd /home/ec2-user/microservices
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/reservations:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/billing:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/products:latest
          docker-compose down
          docker-compose up -d --build
          EOF
